[package]
name = "lfs-rs"
version = "0.3.6"
authors = ["Jason White <rust@jasonwhite.io>", "The Believer Company <believeross@believer.gg>"]
edition = "2021"
description = """
A high-performance, caching Git LFS server with an AWS S3 back-end.
"""
documentation = "https://github.com/believer-oss/lfs-rs"
homepage = "https://github.com/believer-oss/lfs-rs"
repository = "https://github.com/believer-oss/lfs-rs"
readme = "README.md"
keywords = ["git-lfs", "s3"]
categories = ["command-line-utilities"]
license = "MIT"

[dependencies]
askama = "0.12"
async-stream = "0.3"
async-trait = "0.1"
aws-config = { version = "0.55.3", optional = true }
aws-sdk-dynamodb = { version = "0.28.0", optional = true }
backoff = { version = "0.4", features = ["tokio"] }
bytes = "1"
chacha = "0.3"
chrono = "0.4.26"
derive_more = "0.99"
futures = "0.3"
generic-array = "0.14"
hex = "0.4"
http = "0.2"
human-size = "0.4"
humansize = "2"
humantime = "2"
hyper = { version = "0.14", features = ["server", "http1", "http2", "tcp", "stream"] }
hyper-tls = { version = "0.5.0", features = ["vendored"] }
linked-hash-map = { version = "0.5", features = ["serde_impl"] }
log = "0.4"
pretty_env_logger = "0.5"
rand = { version = "0.8", optional = true }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
sha2 = "0.10"
clap = { version = "4.3", features = ["derive", "env"] }
tokio = { version = "1", features = ["full"] }
tokio-util = { version = "0.7", features = ["full"] }
url = "2"
uuid = { version = "1.1", features = ["v4"] }
anyhow = "1.0"
thiserror = "1.0"
redis = { version = "0.23.0", optional = true, features = ["aio", "tokio-comp"] }
base64 = { version = "0.21.2" }
parking_lot = { version = "0.12" }

opentelemetry = { version = "0.19.0", features = ["rt-tokio", "trace"], optional = true }
opentelemetry-otlp = { version = "0.12.0", features = ["http-proto", "tls", "tls-roots", "tokio", "tonic"], optional = true }
opentelemetry-http = { version = "0.8", features = ["hyper", "tokio"], optional = true }
tracing = { version = "0.1", features = ["attributes"] }
tracing-opentelemetry = { version = "0.19", optional = true }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "registry"], optional = true }

[dev-dependencies]
rand = "0.8"
tempfile = "3"
duct = "0.13"
env_logger = "0.10"
toml = "0.7"
wiremock = "0.5"

[dependencies.rusoto_core]
version = "0.48"
default_features = false
features = ["rustls"]

[dependencies.rusoto_credential]
version = "0.48"

[dependencies.rusoto_sts]
version = "0.48"
features = ["rustls"]
default_features = false

[dependencies.rusoto_s3]
version = "0.48"
default_features = false
features = ["rustls"]

[features]
default = ["dynamodb", "redis", "otel"]
# If the "faulty" feature is enabled, random failures are injected into the byte
# stream.
faulty = ["rand"]
redis = ["dep:redis"]
dynamodb = ["dep:aws-config", "dep:aws-sdk-dynamodb"]
otel = ["dep:opentelemetry", "dep:opentelemetry-otlp", "dep:tracing-opentelemetry", "dep:tracing-subscriber"]
